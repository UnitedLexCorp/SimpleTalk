SimpleTalk {
	Script
		= handler
		| functionHandler
		| comment
		| end

	// Helper utilities
	// Accounts for singular and plural word (i.e. with and without 's')
	singPlu<x> = x "s"?

	// Handler syntax insists that the "on <sym>" matches "end <sym>"
	// ie we cannnot have a handler which begins with "on mouseUp" but
	// terminates with "end "deleteCard"
	// Note the space after "on" and "end", i.e. "onmouseUp" is not allowed
	// but "on mouseUp" is
	handlerSyntax<sym, inner> = "on " sym inner "end " sym

	handler (an "on" event type handler)
		= handlerSyntax<symbol, noArgHandler>
		| handlerSyntax<symbol, argHandler>

	noArgHandler (handler statement list)
		= space+ statementList?

	argHandler (handler parameter and statement lists)
		= " " parameterList space+ statementList?

	// Function definition follows the HT convention
	// function functionName [parameterList]
	//     statementList
	// end functionName
	functionHandlerSyntax<name, parameters, statements> 
		= "function" space name "(" parameterList? ")" "\n" statements? "end" space name

	functionHandler = functionHandlerSyntax<functionName, parameterList, statementList>

	// TODO do we want to restrict function names (start with lowercase etc)?
	// prevent keyword overloading?
	functionName (function name)
		= letter (letter | digit)*

	// Note: no spaces between parameters
	parameterList (parameter list)
		// TODO do we need to prevent keyword overload?
		= nonemptyListOf<(letter | digit)+, ", ">
		
	// For the moment we allow only the "function()" syntax to describe a function
	// (as opposed to "the function" or "function of" more general syntax found on HT) 
	// TODO should we insist that authered functions start with a lower case letter?
	function
		= builtInFunction "(" parameterList? ")" --builtInFunction
		// TODO do we need to prevent keyword overload?
		| functionName "(" parameterList? ")" --authoredFunction

	builtInFunction (natively supported functions in SimpleTalk)
		= builtInMathFunction | "charToNum" | "date" | "length" | "menus"
		| "mouseClick" | "mouse"
		| modifierKeyName "key" -- modifierKeyBuiltInFunction 

	// TODO should we insist on certain functions having no argument or single args
	// at the grammar level?
	builtInMathFunction (math function)
		= "average" | "min" | "max" | "sum" | "random" | "sqrt" | "trunc" | "sin"
		| "cos" | "tan" | "atan" | "exp" | "ln" | "abs"


	statementList (a statement list, comments included)
		= statementLine+

	statementLine (a statement line)
		= space* statement "\n" 

	// Note we explicitely exclude keywords, i.e. control
	statement (a statement)
		= ~"end" (globalStatement)
	
	// statement (a statement)
		// = globalStatement
		//| commandStatement
		//| functionCall
		//| messageStatement
		//| expression
		//| ifStatement
		//| repeatStatement
		//| returnStatement
		
	globalStatement (a "global" statement)
		= "global " parameterList

	symbol (a symbol, id or keyword)
		= letter (letter | digit)*  -- authored
		| keywordWC  -- keywordWC

	id (an id)
		= letter (letter | digit)*

	// We need to prevent keyword overload since these are core control flow indicators
	keyword (a keyword)
		= "do" | "next" | "else" | "on" | "end" | "pass" | "exit" | "repeat" | "function" | "return" | "global" | "send" | "if" | "then"

	// Temporary implementation of WC's keywords
	keywordWC (a keyword symbol)
		= "menu" menuType? -- menuTypeSymbol 
		| "round" | "rectangle" | "rect" | "screenrect" | "point" | singPlu<"line"> | "poly" "gon"? --polygonType 
		| "bottom" | "top" | "center" | "middle" | "mid" | "whole" | "start"  
		| "file"  | "tool"  | "domenu" | "script" | "titlebar" | "screen" | "this" | "text" | singPlu<"voice">
		| "sound" | "speech"  | "systemversion" | "diskspace" | "commandkeydown" | "checkpoint" | "effect"
		| picture | "barn" | "door" | "checkerboard" | "iris" | "venetian" | "blinds" | singPlu<"tick">
		| "messages" | "msg" | "box" | "result" | "value" | "length" | "keydown" | "type"
		| "pattern" | "watcher" | "variable" |  "password" | "selection" | "tempo"
		| singPlu<"window"> | "dialog" | singPlu<"part"> | "id" | singPlu<"word"> 
		| "annuity" | "compound" | "numtochar" | "chartonum"
		| singPlu<"character"> | singPlu<"char"> 
		| "selected" ("chunk" | "field" | "line" | "loc" | "text")? -- selectedTypeKeyword
		| singPlu<"item">
		| commonKey + "key" -- commonkeyTypeKeyword
		| "click" + clickActions? -- commonclickTypeKeyword
		| "short" | "long" | "ascending" | "descending" | "abbreviated" | "marked" | "abbrev" | "abbr" | "regular" | "reg"
		| "slowly" | "slow" | "fast" | "very" | "plain" | "inverse"
		| "international" | "visual" | "robotic" | "english" | "finding"
		| commonActions
		| "found" ("chunk" | "field" | "line" | "text")  --foundObjectKeyword
		| "mouse" ( "click" | "loc")?  --mouseActionKeyword
		| "male" | "female" | "neuter" 
		| "string" | "number" | "integer" | "numeric" | "logical" | "dateitems" | singPlu<"time"> | "bool" "ean"? --boolTypeKeyword
		| "date" "time"? --datatimeKeywords
		|  singPlu<secondType> 
		// note "second" overloads both time and ordinal
		| "first" | "third" | "fourth" | "fifth" | "sixth" | "seventh" | "eighth" | "ninth" | "tenth" | "last"
		| "down" | "up" | "left" | "right" | "next" | "offset" | "prev" "ious"? --previousType
		| "until" | "where" | "while" | "can" | "forever"   
		| "to" |  "at" | "from" | "by" | "for" | "as" | "of" | "in" | "out" | "using" | "with" "out"? --withPrepKeyword
		| "all" | "any" 
		| singPlu<"button"> | singPlu<"btn">
		| singPlu<"background"> | singPlu<"bkgnd"> | singPlu<"bg"> 
		| singPlu<"card"> | singPlu<"cd">
		| singPlu<"field"> | singPlu<"fld">
		| "paramcount" | singPlu<"param">
		| "black" | "gray" | "grey" | "white" 
	
	picture (a picture keyword)
		= "pict" ("ure")?

	secondType (second as ordinal or time)
		= "sec" ("ond")?

	menuType (a menu* keyword symbol)
		= "bar" | singPlu<"item"> 
		|"s" |"message" | "msg"

	modifierKeyName (a modifier key name)
		= "command" | "option" | "control" | "shift"

	commonKey (common keys)
		= "tab" | "arrow" | "enter"

	clickActions (click* actions)
		= "h" | "chunk" | "loc" | "line" | "text" | "v" 

	commonActions (typical actions such as add, ask etc)
		= "add" | "answer" | "ask"| "beep" | "choose" | "close" | "convert"
		| "create" | "debug" | "delete"| "dial" | "disable" |  "dissolve" | "divide" | "drag" | "edit"
		| "enable" | "enterinfield" | "export" | "find" | "get" | "go" | "hide"  | "import" | "lock"
		| "mark"  | "multiply" | "open" | "paint" | "play" | "pop" | "push" | "put"
		| "read" | "reset" | "save"  | "scroll" | "speak" | "spray" | singPlu<"stack"> | "set"  | "show"
		| "sort" | "shrink" | "stretch" | "subtract" | "unlock" | "unmark" | "wait"
		| "wipe" | "write" | "zoom"

	// TODO
	comment
		= "--"letter+
}
