/**
 * SimpleTalk Core CSS
 * ---------------------------------
 * This CSS file includes all "public" stlying for
 * the base PartViews, like WorldView, StackView, etc.
 * If you come across behavior not defined in this file,
 * be sure to check the Shadow DOM styling for the given
 * View components.
 **/

/* Global Variables */
:root {
    --marching-ant-width: 1px;
    --marching-ant-length: 10px;
    --marching-ant-color: black;
    --palette-yellow: #ffea95;
    --palette-blue: #004b67;
    --palette-green: #41ccb4;
    --palette-orange: #ff7c5d;
    --palette-red: #c70151;
    --palette-cornsik: #FFF8DC;
}

/* Keyframe Animations */
@keyframes marching-ants-animation {
    0%   {background-position: 0 0, var(--marching-ant-length) 100%, 0 var(--marching-ant-length), 100% 0;}
    100% {background-position: var(--marching-ant-length) 0, 0 100%, 0 0, 100% var(--marching-ant-length);}
}

/* Prerequisites */
* {
    box-sizing: border-box;
    flex-grow: 1;
}

.active {
    background-color: black;
    color: white;
}

/* =World Styles
 *----------------------------------------------------*/
st-world {
    display: block;
    position: relative;
    width: 100%;
    height: 100%;
    background-color: pink;
}


/* =Stack Styles
 *----------------------------------------------------*/
st-stack {
    width: 100%;
    height: 100%;
    display: flex;
}

st-world > st-stack {
     display: none;
}

.current-stack {
    display: block;
}

.current-stack > st-window {
    z-index: 1;
}

.current-stack > st-button {
    z-index: 1;
}

.current-stack > st-container {
    z-index: 1;
}
/* =Background Styles
 *----------------------------------------------------*/
st-background {
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
}

/* Give a pinkish background color to the background
 * of the current Stack in the world (but not Windows, etc)
 */
st-world > .current-stack > st-background {
    background-color: var(--palette-blue);
}


/* =Card Styles
 *----------------------------------------------------*/
st-card {
    display: none;
    position: relative;
    width: 100%;
    height: 100%;
}

.current-card {
    display: block;
    background-color: var(--palette-blue);
}

/* =Button Styles
 *----------------------------------------------------*/
st-button {
    box-sizing: border-box;
    display: flex;
    position: absolute;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: var(--palette-yellow);
    padding-left: 10px;
    padding-right: 10px;
    padding-top: 5px;
    padding-bottom: 5px;
    font-family: monospace;
    border: 1px solid rgb(50, 50, 50);
    user-select: none;
    margin-left: -1px;
    margin-right: -1px;
}

st-button:not(.editing):hover {
    cursor: pointer;
}


/* =Layout Styles
 *----------------------------------------------------*/
st-layout {
    display: flex;
    position: absolute;
    border: 1px solid transparent;
    box-sizing: border-box;
}

st-layout.list-column {
    flex-direction: column;
}

st-layout.list-row {
    flex-direction: row;
}


/* =Window Styles
 *----------------------------------------------------*/
st-window {
    box-sizing: border-box;
    display: flex;
    position: absolute;
    flex-direction: column;
    background-color: var(--palette-blue);
    border: 1px solid rgba(100, 100, 100, 0.2);
    box-shadow: 3px 4px 4px 0px rgba(50, 50, 50, 0.3);
}

st-window:active {
    z-index: 100;
}
/* width and height of stacks in windows should
 * adjust based on contents, but at minimum be 100%
 * of parent
 */
st-window > st-stack,
st-window > st-stack > .current-card {
    min-width: 100%;
    min-height: 100%;
    height: auto;
    width: auto
}

/* This is the fix for Toolbox window's
 * layout, but it's hacky and suggests that
 * perhaps layouts should be more fundamental
 **/
st-window > st-stack > .current-card > st-layout {
    position: relative;
}

/* =Container Styles
 *---------------------------------------------------------*/
st-container {
    position: absolute;
    border: 1px solid rgb(150, 150, 150);
}

st-container:empty {
    min-height: 100px;
    min-width: 100px;
}

/* =Svg Styles
 *---------------------------------------------------------*/
st-svg {
    display: block;
    position: absolute;
    /* border: 1px solid rgb(150, 150, 150);*/
}

/* =Drawing Styles
 *----------------------------------------------------*/
st-drawing {
    background-color: #1fe0; /* transparent */
}

/* =Field Styles
 *----------------------------------------------------*/
st-field {
    min-height: 300px;
}

st-window st-field{
    height: 100%;
}

/* =Editor Styles
 *----------------------------------------------------*/
st-button-editor{
    width: 300px;
    background-color: var(--palette-cornsik);
    display: flex;
    flex-direction: column;
    align-items: center;
}

st-button-editor > color-wheel{
    position: absolute;
}

st-button-editor:active {
    z-index: 100;
}
/* =Layout Class Styles
 * --------------------------------------------------------*/
.list-layout {
    display: flex;
}

.list-layout > * {
    position: relative !important;
}

.list-row {
    flex-direction: row;
}

.list-column {
    flex-direction: column;
}


/* =Utility Classes
 * --------------------------------------------------------*/
.editing {
    background-image: linear-gradient(90deg, var(--marching-ant-color) 50%, transparent 50%),
        linear-gradient(90deg, var(--marching-ant-color) 50%, transparent 50%),
        linear-gradient(0, var(--marching-ant-color) 50%, transparent 50%),
        linear-gradient(0, var(--marching-ant-color) 50%, transparent 50%);
    background-repeat: repeat-x, repeat-x, repeat-y, repeat-y;
    background-size: var(--marching-ant-length) var(--marching-ant-width), var(--marching-ant-length) var(--marching-ant-width), var(--marching-ant-width) var(--marching-ant-length), var(--marching-ant-width) var(--marching-ant-length);
    animation: marching-ants-animation 400ms infinite linear;
    border-color: transparent;
}
